{"ast":null,"code":"var _jsxFileName = \"D:\\\\CTD\\\\FrontEnd3\\\\Final_Libre_Front3_Async\\\\fe3-final\\\\src\\\\Components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n\n  const isValidEmail = email => {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email) && email.endsWith(\".com\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (fullName.length > 5 && isValidEmail(email)) {\n      // Simulamos el envío del formulario (en este caso, solo mostramos los datos por consola)\n      console.log(\"Datos del formulario:\", {\n        fullName,\n        email\n      }); // Mostramos el mensaje de éxito\n\n      setIsFormSubmitted(true);\n    } else {\n      // Mostramos el mensaje de error\n      console.error(\"Por favor, verifique su información nuevamente\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isFormSubmitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Gracias \", fullName, \". We will contact you as soon as possible via email.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          children: \"Nombre completo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fullName\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), fullName.length > 5 && !isValidEmail(email) && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Por favor, ingrese un email v\\xE1lido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"ln3R96PzQWkhqY9aQNfokkda/ug=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Form","fullName","setFullName","email","setEmail","isFormSubmitted","setIsFormSubmitted","isValidEmail","test","endsWith","handleSubmit","e","preventDefault","length","console","log","error","target","value","color"],"sources":["D:/CTD/FrontEnd3/Final_Libre_Front3_Async/fe3-final/src/Components/Form.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Form = () => {\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n\r\n  const isValidEmail = (email) => {\r\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email) && email.endsWith(\".com\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (fullName.length > 5 && isValidEmail(email)) {\r\n      // Simulamos el envío del formulario (en este caso, solo mostramos los datos por consola)\r\n      console.log(\"Datos del formulario:\", { fullName, email });\r\n\r\n      // Mostramos el mensaje de éxito\r\n      setIsFormSubmitted(true);\r\n    } else {\r\n      // Mostramos el mensaje de error\r\n      console.error(\"Por favor, verifique su información nuevamente\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isFormSubmitted ? (\r\n        <p>\r\n          Gracias {fullName}. We will contact you as soon as possible via email.\r\n        </p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"fullName\">Nombre completo:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"fullName\"\r\n              value={fullName}\r\n              onChange={(e) => setFullName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          {fullName.length > 5 && !isValidEmail(email) && (\r\n            <p style={{ color: \"red\" }}>Por favor, ingrese un email válido</p>\r\n          )}\r\n          <button type=\"submit\">Enviar</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,KAAD,CAAtD;;EAEA,MAAMQ,YAAY,GAAIJ,KAAD,IAAW;IAC9B,OAAO,6BAA6BK,IAA7B,CAAkCL,KAAlC,KAA4CA,KAAK,CAACM,QAAN,CAAe,MAAf,CAAnD;EACD,CAFD;;EAIA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;;IAEA,IAAIX,QAAQ,CAACY,MAAT,GAAkB,CAAlB,IAAuBN,YAAY,CAACJ,KAAD,CAAvC,EAAgD;MAC9C;MACAW,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC;QAAEd,QAAF;QAAYE;MAAZ,CAArC,EAF8C,CAI9C;;MACAG,kBAAkB,CAAC,IAAD,CAAlB;IACD,CAND,MAMO;MACL;MACAQ,OAAO,CAACE,KAAR,CAAc,gDAAd;IACD;EACF,CAbD;;EAeA,oBACE;IAAA,UACGX,eAAe,gBACd;MAAA,uBACWJ,QADX;IAAA;MAAA;MAAA;MAAA;IAAA,QADc,gBAKd;MAAM,QAAQ,EAAES,YAAhB;MAAA,wBACE;QAAA,wBACE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,EAAE,EAAC,UAFL;UAGE,KAAK,EAAET,QAHT;UAIE,QAAQ,EAAGU,CAAD,IAAOT,WAAW,CAACS,CAAC,CAACM,MAAF,CAASC,KAAV;QAJ9B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAA,wBACE;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,EAAE,EAAC,OAFL;UAGE,KAAK,EAAEf,KAHT;UAIE,QAAQ,EAAGQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACM,MAAF,CAASC,KAAV;QAJ3B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,EAmBGjB,QAAQ,CAACY,MAAT,GAAkB,CAAlB,IAAuB,CAACN,YAAY,CAACJ,KAAD,CAApC,iBACC;QAAG,KAAK,EAAE;UAAEgB,KAAK,EAAE;QAAT,CAAV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QApBJ,eAsBE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBF;IAAA;MAAA;MAAA;MAAA;IAAA;EANJ;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CA1DD;;GAAMnB,I;;KAAAA,I;AA4DN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}