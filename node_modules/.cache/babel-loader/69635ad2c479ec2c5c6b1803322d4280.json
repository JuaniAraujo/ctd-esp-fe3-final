{"ast":null,"code":"// Este archivo define el estado inicial y el reducer que manejará las acciones.\nexport const initialState = {\n  theme: 'light',\n  dentists: [],\n  // Información de los dentistas\n  favoriteDentists: [] // Dentistas destacados\n  // Otros estados globales pueden ir aquí\n\n};\nexport const appReducer = (state, action) => {\n  switch (action.type) {\n    case 'TOGGLE_THEME':\n      return { ...state,\n        theme: state.theme === 'light' ? 'dark' : 'light'\n      };\n\n    case 'SET_DENTISTS':\n      // La spread syntax ({ ...state }) se utiliza para crear una copia del estado actual\n      // y luego se sobrescribe la propiedad dentists con la nueva información proporcionada por action.payload.\n      return { ...state,\n        dentists: action.payload\n      };\n\n    case 'TOGGLE_FAVORITE':\n      // Verificamos si el dentista ya está en destacados y lo agregamos o eliminamos en consecuencia\n      const isFavorite = state.favoriteDentists.some(dentist => dentist.id === action.payload.id);\n      return { ...state,\n        favoriteDentists: isFavorite ? state.favoriteDentists.filter(dentist => dentist.id !== action.payload.id) : [...state.favoriteDentists, action.payload]\n      };\n    // Otros casos pueden ir aquí\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialState","theme","dentists","favoriteDentists","appReducer","state","action","type","payload","isFavorite","some","dentist","id","filter"],"sources":["D:/CTD/FrontEnd3/Final_Libre_Front3_Async/fe3-final/src/Context/AppReducer.jsx"],"sourcesContent":["// Este archivo define el estado inicial y el reducer que manejará las acciones.\r\n\r\nexport const initialState = {\r\n    theme: 'light',\r\n    dentists: [], // Información de los dentistas\r\n    favoriteDentists: [], // Dentistas destacados\r\n  // Otros estados globales pueden ir aquí\r\n  };\r\n  \r\n  export const appReducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n      case 'TOGGLE_THEME':\r\n        return { ...state, theme: state.theme === 'light' ? 'dark' : 'light' };\r\n\r\n      case 'SET_DENTISTS':\r\n        // La spread syntax ({ ...state }) se utiliza para crear una copia del estado actual\r\n      // y luego se sobrescribe la propiedad dentists con la nueva información proporcionada por action.payload.\r\n        return { ...state, dentists: action.payload };\r\n\r\n      case 'TOGGLE_FAVORITE':\r\n      // Verificamos si el dentista ya está en destacados y lo agregamos o eliminamos en consecuencia\r\n      const isFavorite = state.favoriteDentists.some(dentist => dentist.id === action.payload.id);\r\n      return {\r\n        ...state,\r\n        favoriteDentists: isFavorite\r\n          ? state.favoriteDentists.filter(dentist => dentist.id !== action.payload.id)\r\n          : [...state.favoriteDentists, action.payload],\r\n      };\r\n\r\n      // Otros casos pueden ir aquí\r\n\r\n      default:\r\n        return state;\r\n        \r\n    }\r\n  };\r\n  "],"mappings":"AAAA;AAEA,OAAO,MAAMA,YAAY,GAAG;EACxBC,KAAK,EAAE,OADiB;EAExBC,QAAQ,EAAE,EAFc;EAEV;EACdC,gBAAgB,EAAE,EAHM,CAGF;EACxB;;AAJ0B,CAArB;AAOL,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC3C,QAAQA,MAAM,CAACC,IAAf;IAEE,KAAK,cAAL;MACE,OAAO,EAAE,GAAGF,KAAL;QAAYJ,KAAK,EAAEI,KAAK,CAACJ,KAAN,KAAgB,OAAhB,GAA0B,MAA1B,GAAmC;MAAtD,CAAP;;IAEF,KAAK,cAAL;MACE;MACF;MACE,OAAO,EAAE,GAAGI,KAAL;QAAYH,QAAQ,EAAEI,MAAM,CAACE;MAA7B,CAAP;;IAEF,KAAK,iBAAL;MACA;MACA,MAAMC,UAAU,GAAGJ,KAAK,CAACF,gBAAN,CAAuBO,IAAvB,CAA4BC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACE,OAAP,CAAeI,EAArE,CAAnB;MACA,OAAO,EACL,GAAGP,KADE;QAELF,gBAAgB,EAAEM,UAAU,GACxBJ,KAAK,CAACF,gBAAN,CAAuBU,MAAvB,CAA8BF,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACE,OAAP,CAAeI,EAAvE,CADwB,GAExB,CAAC,GAAGP,KAAK,CAACF,gBAAV,EAA4BG,MAAM,CAACE,OAAnC;MAJC,CAAP;IAOA;;IAEA;MACE,OAAOH,KAAP;EAvBJ;AA0BD,CA3BM"},"metadata":{},"sourceType":"module"}