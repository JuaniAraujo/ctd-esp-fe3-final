{"ast":null,"code":"var _jsxFileName = \"D:\\\\CTD\\\\FrontEnd3\\\\Final_Libre_Front3_Async\\\\fe3-final\\\\src\\\\Routes\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\n//import React from 'react'\nimport Card from '../Components/Card';\nimport React, { useState, useEffect } from 'react'; //import { Link } from 'react-router-dom';\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [dentists, setDentists] = useState([]);\n  useEffect(() => {\n    // Aquí se realiza la solicitud a la API para obtener la lista de \n    // dentistas y actualizar el estado 'dentists' con la respuesta:\n    const fetchDentists = async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        const data = await response.json(); //console.log('Dentists data:', data); // depuración\n\n        setDentists(data);\n      } catch (error) {\n        console.error('Error fetching dentists:', error);\n      }\n    };\n\n    fetchDentists();\n  }, []); //end useEffect\n  // Ajusta el array de dependencias según tus necesidades.\n\n  const handleAddToFavorites = dentistId => {// Aquí implementa la lógica para agregar al dentista con el ID dado a favoritos (LocalStorage).\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Our Dentists:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: dentists.map(dentist =>\n      /*#__PURE__*/\n\n      /* <Card key={dentist.id}>\r\n        <h3>{dentist.name}</h3>\r\n        <p>{dentist.username}</p>\r\n        <button onClick={() => handleAddToFavorites(dentist.id)}>ADD FAV</button>\r\n        <Link to={`/dentist/${dentist.id}`}>Ver detalles</Link>\r\n      </Card> */\n      _jsxDEV(Card, {\n        name: dentist.name,\n        username: dentist.username,\n        id: dentist.id\n      }, dentist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"7ybyrpxdOUNw8S6dnM4VKwVYk5A=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Card","React","useState","useEffect","Home","dentists","setDentists","fetchDentists","response","fetch","data","json","error","console","handleAddToFavorites","dentistId","map","dentist","name","username","id"],"sources":["D:/CTD/FrontEnd3/Final_Libre_Front3_Async/fe3-final/src/Routes/Home.jsx"],"sourcesContent":["//import React from 'react'\r\nimport Card from '../Components/Card'\r\nimport React, { useState, useEffect } from 'react'; \r\n//import { Link } from 'react-router-dom';\r\n\r\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\r\n\r\nconst Home = () => {\r\n  const [dentists, setDentists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Aquí se realiza la solicitud a la API para obtener la lista de \r\n    // dentistas y actualizar el estado 'dentists' con la respuesta:\r\n    const fetchDentists = async () => {\r\n      try {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        const data = await response.json();\r\n        //console.log('Dentists data:', data); // depuración\r\n        setDentists(data);\r\n      } catch (error) {\r\n        console.error('Error fetching dentists:', error);\r\n      }\r\n    };\r\n\r\n    fetchDentists();\r\n\r\n  }, []);   //end useEffect\r\n            // Ajusta el array de dependencias según tus necesidades.\r\n\r\n\r\n  const handleAddToFavorites = (dentistId) => {\r\n    // Aquí implementa la lógica para agregar al dentista con el ID dado a favoritos (LocalStorage).\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <main className=\"\" >\r\n      <h1>Our Dentists:</h1>\r\n      <div className='card-grid'>\r\n      {dentists.map((dentist) => (\r\n          /* <Card key={dentist.id}>\r\n            <h3>{dentist.name}</h3>\r\n            <p>{dentist.username}</p>\r\n            <button onClick={() => handleAddToFavorites(dentist.id)}>ADD FAV</button>\r\n            <Link to={`/dentist/${dentist.id}`}>Ver detalles</Link>\r\n          </Card> */\r\n          <Card key={dentist.id} name={dentist.name} username={dentist.username} id={dentist.id} />\r\n        ))}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AAEA;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMI,aAAa,GAAG,YAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;QACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAFE,CAGF;;QACAL,WAAW,CAACI,IAAD,CAAX;MACD,CALD,CAKE,OAAOE,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;MACD;IACF,CATD;;IAWAL,aAAa;EAEd,CAhBQ,EAgBN,EAhBM,CAAT,CAHiB,CAmBP;EACA;;EAGV,MAAMO,oBAAoB,GAAIC,SAAD,IAAe,CAC1C;EACD,CAFD;;EAMA,oBACE;IAAM,SAAS,EAAC,EAAhB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,UACCV,QAAQ,CAACW,GAAT,CAAcC,OAAD;MAAA;;MACV;AACV;AACA;AACA;AACA;AACA;MACU,QAAC,IAAD;QAAuB,IAAI,EAAEA,OAAO,CAACC,IAArC;QAA2C,QAAQ,EAAED,OAAO,CAACE,QAA7D;QAAuE,EAAE,EAAEF,OAAO,CAACG;MAAnF,GAAWH,OAAO,CAACG,EAAnB;QAAA;QAAA;QAAA;MAAA,QAPH;IADD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA7CD;;GAAMhB,I;;KAAAA,I;AA+CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}